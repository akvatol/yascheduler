{
  "$schema": "http://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "projectName": {
      "type": "string",
      "defaultValue": "yascheduler",
      "minLength": 3,
      "maxLength": 11,
      "metadata": {
        "description": "Specify a project name that is used to generate resource names."
      }
    },
    "namePrefix": {
      "type": "string",
      "defaultValue": "[uniqueString(resourceGroup().id)]"
    },
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Specify a location for the resources."
      }
    },
    "resourceTags": {
      "type": "object",
      "defaultValue": {
        "ProjectName": "[parameters('projectName')]",
        "DeploymentId": "[parameters('namePrefix')]"
      }
    },

    "publicIpAddressName": {
      "type": "string",
      "defaultValue": "[format('{0}-{1}-ip', parameters('projectName'), parameters('namePrefix'))]"
    },
    "publicIpAddressType": {
      "type": "string",
      "defaultValue": "Dynamic"
    },
    "publicIpAddressSku": {
      "type": "string",
      "defaultValue": "Basic"
    },

    "networkSecurityGroupName": {
      "type": "string",
      "defaultValue": "[concat(parameters('projectName'), '-nsg')]"
    },
    "virtualNetworkName": {
      "type": "string",
      "defaultValue": "[concat(parameters('projectName'), '-vnet')]"
    },
    "subnetName": {
      "type": "string",
      "defaultValue": "[concat(parameters('projectName'), '-subnet')]"
    },
    "networkInterfaceName": {
      "type": "string",
      "defaultValue": "[format('{0}-{1}-nic', parameters('projectName'), parameters('namePrefix'))]"
    },

    "virtualMachineName": {
      "type": "string",
      "defaultValue": "[format('{0}-{1}-vm', parameters('projectName'), parameters('namePrefix'))]"
    },
    "virtualMachineComputerName": {
      "type": "string",
      "defaultValue": "[parameters('virtualMachineName')]"
    },
    "virtualMachineSize": {
      "type": "string",
      "defaultValue": "Standard_B1s"
    },
    "osDiskType": {
      "type": "string",
      "defaultValue": "StandardSSD_LRS"
    },
    "imagePublisher": {
      "type": "string",
      "defaultValue": "debian"
    },
    "imageOffer": {
      "type": "string",
      "defaultValue": "debian-10"
    },
    "imageSku": {
      "type": "string",
      "defaultValue": "10-backports-gen2"
    },
    "imageVersion": {
      "type": "string",
      "defaultValue": "latest"
    },
    "adminUsername": {
      "type": "string",
      "defaultValue": "yascheduler"
    },
    "adminPublicKey": {
      "type": "string"
    },
    "customData": {
      "type": "string",
      "defaultValue": null
    }
  },
  "variables": {
    "ipId": "[resourceId(resourceGroup().name, 'Microsoft.Network/publicIpAddresses', parameters('publicIpAddressName'))]",
    "nsgId": "[resourceId(resourceGroup().name, 'Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroupName'))]",
    "vnetId": "[resourceId(resourceGroup().name, 'Microsoft.Network/virtualNetworks', parameters('virtualNetworkName'))]",
    "subnetRef": "[concat(variables('vnetId'), '/subnets/', parameters('subnetName'))]",
    "nicId": "[resourceId(resourceGroup().name, 'Microsoft.Network/networkInterfaces', parameters('networkInterfaceName'))]",
    "imageReference": {
      "publisher": "[parameters('imagePublisher')]",
      "offer": "[parameters('imageOffer')]",
      "sku": "[parameters('imageSku')]",
      "version": "[parameters('imageVersion')]"
    },
    "linuxConfiguration": {
      "disablePasswordAuthentication": true,
      "ssh": {
        "publicKeys": [
          {
            "path": "[concat('/home/', parameters('adminUsername'), '/.ssh/authorized_keys')]",
            "keyData": "[parameters('adminPublicKey')]"
          }
        ]
      }
    }
  },
  "resources": [
    {
      "name": "[parameters('publicIpAddressName')]",
      "type": "Microsoft.Network/publicIpAddresses",
      "apiVersion": "2019-02-01",
      "location": "[parameters('location')]",
      "tags": "[parameters('resourceTags')]",
      "properties": {
        "publicIpAllocationMethod": "[parameters('publicIpAddressType')]",
        "deleteOption": "Delete"
      },
      "sku": {
        "name": "[parameters('publicIpAddressSku')]"
      }
    },
    {
      "name": "[parameters('networkInterfaceName')]",
      "type": "Microsoft.Network/networkInterfaces",
      "apiVersion": "2021-03-01",
      "location": "[parameters('location')]",
      "tags": "[parameters('resourceTags')]",
      "dependsOn": ["[variables('ipId')]"],
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "subnet": {
                "id": "[variables('subnetRef')]"
              },
              "privateIPAllocationMethod": "Dynamic",
              "publicIpAddress": {
                "id": "[variables('ipId')]"
              }
            }
          }
        ],
        "networkSecurityGroup": {
          "id": "[variables('nsgId')]"
        },
        "deleteOption": "Delete"
      }
    },
    {
      "name": "[parameters('virtualMachineName')]",
      "type": "Microsoft.Compute/virtualMachines",
      "apiVersion": "2021-07-01",
      "location": "[parameters('location')]",
      "tags": "[parameters('resourceTags')]",
      "dependsOn": ["[variables('nicId')]"],
      "properties": {
        "hardwareProfile": {
          "vmSize": "[parameters('virtualMachineSize')]"
        },
        "storageProfile": {
          "osDisk": {
            "createOption": "fromImage",
            "deleteOption": "Delete",
            "managedDisk": {
              "storageAccountType": "[parameters('osDiskType')]"
            }
          },
          "imageReference": "[variables('imageReference')]"
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[variables('nicId')]"
            }
          ]
        },
        "osProfile": {
          "computerName": "[parameters('virtualMachineComputerName')]",
          "adminUsername": "[parameters('adminUsername')]",
          "linuxConfiguration": "[variables('linuxConfiguration')]",
          "customData": "[base64(parameters('customData'))]"
        },
        "diagnosticsProfile": {
          "bootDiagnostics": {
            "enabled": true
          }
        }
      }
    }
  ],
  "outputs": {
    "publicIpAddressName": {
      "type": "string",
      "value": "[parameters('publicIpAddressName')]"
    }
  }
}
